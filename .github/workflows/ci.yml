name: WebSocketScope CI

on:
  push:
    branches:
      - 'release/1.*'
    tags:
      - 'v1.*'
  pull_request:
    branches:
      - 'release/1.*'

jobs:
  build-and-test:
    runs-on: self-hosted

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Instalar .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Compilar solução
        run: dotnet build --configuration Release --no-restore

      - name: Executar testes
        run: dotnet test --no-build --verbosity normal

  release:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v1.')
    runs-on: self-hosted

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Criar release no GitHub
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true

  merge-branches:
    needs: release
    if: startsWith(github.ref, 'refs/tags/v1.')
    runs-on: self-hosted

    steps:
      - name: Checkout código
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configurar Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Obter branch de origem da tag
        id: origem
        run: |
          BRANCH=$(git branch -r --contains ${{ github.sha }} | grep 'origin/release/' | head -n 1 | sed 's/origin\///')
          echo "BRANCH_ORIGEM=$BRANCH" >> $GITHUB_ENV

      - name: Merge release ➜ develop
        run: |
          git checkout develop
          git merge origin/${{ env.BRANCH_ORIGEM }} --no-edit || true
          git push origin develop

      - name: Merge develop ➜ master
        run: |
          git checkout master
          git merge develop --no-edit || true
          git push origin master

      - name: Merge master ➜ main
        run: |
          git checkout main
          git merge master --no-edit || true
          git push origin main
