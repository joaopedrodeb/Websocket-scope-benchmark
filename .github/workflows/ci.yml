name: WebSocketScope CI

on:
  push:
    branches:
      - 'release/*'
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: self-hosted

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v3

      - name: Instalar .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependÃªncias
        run: dotnet restore

      - name: Compilar soluÃ§Ã£o
        run: dotnet build --configuration Release --no-restore

      - name: Executar testes
        run: dotnet test --no-build --configuration Release --verbosity normal

  tag-release:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/heads/release/')
    runs-on: self-hosted
    outputs:
      version: ${{ steps.vars.outputs.version }}

    steps:
      - name: Extrair versÃ£o da branch
        id: vars
        shell: powershell
        run: |
          $version = "${{ github.ref_name }}".Replace("release/", "")
          echo "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Criar e subir tag v*
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ steps.vars.outputs.version }}
          git push origin v${{ steps.vars.outputs.version }}

  release:
    needs: tag-release
    runs-on: self-hosted
    if: always()  # ðŸ‘ˆ roda mesmo que a tag nÃ£o dispare novo evento

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v3

      - name: Criar release no GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.tag-release.outputs.version }}
          generate_release_notes: true

  merge-branches:
    needs: release
    runs-on: self-hosted
    if: always()  # ðŸ‘ˆ forÃ§a execuÃ§Ã£o mesmo sem novo evento

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configurar Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge release âžœ develop
        run: |
          git fetch origin
          BRANCH_FROM=$(git tag --points-at HEAD || echo ${{ github.ref_name }})
          git checkout develop
          git merge origin/$BRANCH_FROM --no-edit || true
          git push origin develop

      - name: Merge develop âžœ master
        run: |
          git checkout master
          git merge develop --no-edit || true
          git push origin master

      - name: Merge master âžœ main
        run: |
          git checkout main
          git merge master --no-edit || true
          git push origin main
